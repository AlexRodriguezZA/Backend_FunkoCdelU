{"{\"assumptions\":{},\"sourceRoot\":\"/home/alex/FunkoCdelU_App/ksdjidsjijdskodskoadsdas/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/alex/FunkoCdelU_App/ksdjidsjijdskodskoadsdas\",\"filename\":\"/home/alex/FunkoCdelU_App/ksdjidsjijdskodskoadsdas/index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/alex/FunkoCdelU_App/ksdjidsjijdskodskoadsdas\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.19.3:development":{"value":{"code":"const express = require('express');\nconst {\n  postgraphile\n} = require('postgraphile');\nconst app = express();\nconst userDb = 'alex';\nconst userPass = 1234;\nconst host = 'localhost';\nconst database = 'BBDD_FunkoCdelU';\napp.use(postgraphile(`postgres://${userDb}:${userPass}@${host}/${database}` || \"postgres://postgres:postgres@127.0.0.1:5432/name-databases\", [\"public\"], {\n  watchPg: true,\n  graphiql: true,\n  enableCors: true,\n  enhanceGraphiql: true,\n  showErrorStack: true\n}));\nconst main = async () => {\n  const port = '3000';\n  await app.listen(port);\n  console.log(`Conectado pa http://localhost:3000/graphiql`);\n};\nmain();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsInBvc3RncmFwaGlsZSIsImFwcCIsInVzZXJEYiIsInVzZXJQYXNzIiwiaG9zdCIsImRhdGFiYXNlIiwidXNlIiwid2F0Y2hQZyIsImdyYXBoaXFsIiwiZW5hYmxlQ29ycyIsImVuaGFuY2VHcmFwaGlxbCIsInNob3dFcnJvclN0YWNrIiwibWFpbiIsInBvcnQiLCJsaXN0ZW4iLCJjb25zb2xlIiwibG9nIl0sInNvdXJjZVJvb3QiOiIvaG9tZS9hbGV4L0Z1bmtvQ2RlbFVfQXBwL2tzZGppZHNqaWpkc2tvZHNrb2Fkc2Rhcy8iLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSAgcmVxdWlyZSgnZXhwcmVzcycpO1xuY29uc3QgeyBwb3N0Z3JhcGhpbGUgfSA9IHJlcXVpcmUoJ3Bvc3RncmFwaGlsZScpO1xuY29uc3QgYXBwID0gZXhwcmVzcygpO1xuXG5jb25zdCB1c2VyRGIgPSAnYWxleCdcbmNvbnN0IHVzZXJQYXNzID0gMTIzNFxuY29uc3QgaG9zdCA9ICdsb2NhbGhvc3QnXG5jb25zdCBkYXRhYmFzZSA9ICdCQkREX0Z1bmtvQ2RlbFUnXG5cbmFwcC51c2UoXG4gICAgcG9zdGdyYXBoaWxlKFxuICAgICAgYHBvc3RncmVzOi8vJHt1c2VyRGJ9OiR7dXNlclBhc3N9QCR7aG9zdH0vJHtkYXRhYmFzZX1gIHx8IFwicG9zdGdyZXM6Ly9wb3N0Z3Jlczpwb3N0Z3Jlc0AxMjcuMC4wLjE6NTQzMi9uYW1lLWRhdGFiYXNlc1wiLFxuICAgICAgWyBcInB1YmxpY1wiXSxcbiAgICAgIHtcbiAgICAgICAgd2F0Y2hQZzogdHJ1ZSxcbiAgICAgICAgZ3JhcGhpcWw6IHRydWUsXG4gICAgICAgIGVuYWJsZUNvcnM6IHRydWUsXG4gICAgICAgIGVuaGFuY2VHcmFwaGlxbDogdHJ1ZSxcbiAgICAgICAgc2hvd0Vycm9yU3RhY2s6IHRydWVcbiAgICAgIH1cbiAgICApXG4gICk7XG4gIFxuY29uc3QgbWFpbiA9IGFzeW5jICgpID0+IHtcbiAgICBjb25zdCBwb3J0ID0gJzMwMDAnO1xuICAgIGF3YWl0IGFwcC5saXN0ZW4ocG9ydCk7XG4gICAgY29uc29sZS5sb2coYENvbmVjdGFkbyBwYSBodHRwOi8vbG9jYWxob3N0OjMwMDAvZ3JhcGhpcWxgKTtcbiAgfVxuICBcbm1haW4oKSJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsT0FBTyxHQUFJQyxPQUFPLENBQUMsU0FBUyxDQUFDO0FBQ25DLE1BQU07RUFBRUM7QUFBYSxDQUFDLEdBQUdELE9BQU8sQ0FBQyxjQUFjLENBQUM7QUFDaEQsTUFBTUUsR0FBRyxHQUFHSCxPQUFPLEVBQUU7QUFFckIsTUFBTUksTUFBTSxHQUFHLE1BQU07QUFDckIsTUFBTUMsUUFBUSxHQUFHLElBQUk7QUFDckIsTUFBTUMsSUFBSSxHQUFHLFdBQVc7QUFDeEIsTUFBTUMsUUFBUSxHQUFHLGlCQUFpQjtBQUVsQ0osR0FBRyxDQUFDSyxHQUFHLENBQ0hOLFlBQVksQ0FDVCxjQUFhRSxNQUFPLElBQUdDLFFBQVMsSUFBR0MsSUFBSyxJQUFHQyxRQUFTLEVBQUMsSUFBSSw0REFBNEQsRUFDdEgsQ0FBRSxRQUFRLENBQUMsRUFDWDtFQUNFRSxPQUFPLEVBQUUsSUFBSTtFQUNiQyxRQUFRLEVBQUUsSUFBSTtFQUNkQyxVQUFVLEVBQUUsSUFBSTtFQUNoQkMsZUFBZSxFQUFFLElBQUk7RUFDckJDLGNBQWMsRUFBRTtBQUNsQixDQUFDLENBQ0YsQ0FDRjtBQUVILE1BQU1DLElBQUksR0FBRyxZQUFZO0VBQ3JCLE1BQU1DLElBQUksR0FBRyxNQUFNO0VBQ25CLE1BQU1aLEdBQUcsQ0FBQ2EsTUFBTSxDQUFDRCxJQUFJLENBQUM7RUFDdEJFLE9BQU8sQ0FBQ0MsR0FBRyxDQUFFLDZDQUE0QyxDQUFDO0FBQzVELENBQUM7QUFFSEosSUFBSSxFQUFFIn0=","map":{"version":3,"names":["express","require","postgraphile","app","userDb","userPass","host","database","use","watchPg","graphiql","enableCors","enhanceGraphiql","showErrorStack","main","port","listen","console","log"],"sourceRoot":"/home/alex/FunkoCdelU_App/ksdjidsjijdskodskoadsdas/","sources":["index.js"],"sourcesContent":["const express =  require('express');\nconst { postgraphile } = require('postgraphile');\nconst app = express();\n\nconst userDb = 'alex'\nconst userPass = 1234\nconst host = 'localhost'\nconst database = 'BBDD_FunkoCdelU'\n\napp.use(\n    postgraphile(\n      `postgres://${userDb}:${userPass}@${host}/${database}` || \"postgres://postgres:postgres@127.0.0.1:5432/name-databases\",\n      [ \"public\"],\n      {\n        watchPg: true,\n        graphiql: true,\n        enableCors: true,\n        enhanceGraphiql: true,\n        showErrorStack: true\n      }\n    )\n  );\n  \nconst main = async () => {\n    const port = '3000';\n    await app.listen(port);\n    console.log(`Conectado pa http://localhost:3000/graphiql`);\n  }\n  \nmain()"],"mappings":"AAAA,MAAMA,OAAO,GAAIC,OAAO,CAAC,SAAS,CAAC;AACnC,MAAM;EAAEC;AAAa,CAAC,GAAGD,OAAO,CAAC,cAAc,CAAC;AAChD,MAAME,GAAG,GAAGH,OAAO,EAAE;AAErB,MAAMI,MAAM,GAAG,MAAM;AACrB,MAAMC,QAAQ,GAAG,IAAI;AACrB,MAAMC,IAAI,GAAG,WAAW;AACxB,MAAMC,QAAQ,GAAG,iBAAiB;AAElCJ,GAAG,CAACK,GAAG,CACHN,YAAY,CACT,cAAaE,MAAO,IAAGC,QAAS,IAAGC,IAAK,IAAGC,QAAS,EAAC,IAAI,4DAA4D,EACtH,CAAE,QAAQ,CAAC,EACX;EACEE,OAAO,EAAE,IAAI;EACbC,QAAQ,EAAE,IAAI;EACdC,UAAU,EAAE,IAAI;EAChBC,eAAe,EAAE,IAAI;EACrBC,cAAc,EAAE;AAClB,CAAC,CACF,CACF;AAEH,MAAMC,IAAI,GAAG,YAAY;EACrB,MAAMC,IAAI,GAAG,MAAM;EACnB,MAAMZ,GAAG,CAACa,MAAM,CAACD,IAAI,CAAC;EACtBE,OAAO,CAACC,GAAG,CAAE,6CAA4C,CAAC;AAC5D,CAAC;AAEHJ,IAAI,EAAE"}},"mtime":1665413951506},"{\"assumptions\":{},\"sourceRoot\":\"/home/alex/FunkoCdelU_App/Backend/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/alex/FunkoCdelU_App/Backend\",\"filename\":\"/home/alex/FunkoCdelU_App/Backend/index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/alex/FunkoCdelU_App/Backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.19.3:development":{"value":{"code":"const express = require(\"express\");\nconst mercadopago = require(\"mercadopago\");\nconst {\n  postgraphile\n} = require(\"postgraphile\");\nconst nodemailer = require(\"nodemailer\");\nlet dotoenv = require(\"dotenv\");\ndotoenv.config();\nconst userDb = process.env.USER_DB;\nconst userPass = process.env.USER_PASS;\nconst host = process.env.HOST;\nconst database = process.env.BBDD;\n\n/*Mandar correo de confirmaciÃ³n al usuario */\n\nasync function MandarEmail(email) {\n  let mailTransporter = nodemailer.createTransport({\n    service: \"gmail\",\n    auth: {\n      user: process.env.EMAIL_FUNKO,\n      pass: process.env.PASS_FUNKO\n    }\n  });\n  let detalle = {\n    from: \"funkocdelu@gmail.com\",\n    to: email,\n    subject: \"Gracias por su compra\",\n    text: \"Su compra fue aprobada\"\n  };\n  mailTransporter.sendMail(detalle, err => {\n    if (err) {\n      console.log(\"Correo no enviado\");\n    } else {\n      console.log(\"Correo enviado\");\n    }\n  });\n}\nasync function ConfirmaCarrito(dni) {\n  const response = await fetch(\"http://localhost:5000/graphql\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      query: `mutation {\n              confirmarComprarDelCarrito(input: {dniUser: ${dni}}) {\n                clientMutationId\n              }\n            }\n            \n            `\n    })\n  });\n  const respuesta = await response.json();\n  console.log(respuesta);\n}\nasync function ConfirmaVenta(dni, mercadopago_id) {\n  const response = await fetch(\"http://localhost:5000/graphql\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      query: `mutation {\n        confirmarEstadoDeVenta(input: {dni: ${dni}, mercadopagoId: \"${mercadopago_id}\"}) {\n          clientMutationId\n        }\n      }\n      \n            `\n    })\n  });\n  const respuesta = await response.json();\n  console.log(respuesta);\n}\nasync function getDataUser(email) {\n  const response = await fetch(\"http://localhost:5000/graphql\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      query: `query MyQuery {\n              usuarioByEmail(email: \"${email}\") {\n                dni\n              }\n            }\n            \n            `\n    })\n  });\n  const respuesta = await response.json();\n  return respuesta.data.usuarioByEmail;\n}\nasync function getMercadoPagoId() {\n  const response = await fetch(\"http://localhost:5000/graphql\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      query: `query MyQuery {\n                    allVentausuarios {\n                    nodes {\n                    mercadopagoId\n          }\n        }\n      }\n      \n            \n            `\n    })\n  });\n  const respuesta = await response.json();\n  return respuesta.data.allVentausuarios.nodes;\n}\n\n/*1Backend 2 ngrok=port 5000 */\nconst {\n  MySchemaCategoriasPlugins\n} = require(\"./Schemas/Categorias/Categorias.js\");\nconst app = express();\nconst notificar = async (req, res) => {\n  try {\n    mercadopago.configure({\n      access_token: \"TEST-5873713881795945-030921-d57166b7b2e69778a0aee6a8bca9190b-1327386578\"\n    });\n    const {\n      query\n    } = req;\n    let payment;\n    const topic = query.topic || query.type;\n    if (topic == \"payment\") {\n      const paymentId = query.id || query[\"data.id\"];\n      payment = await mercadopago.payment.findById(paymentId);\n      const items = payment.body.additional_info.items;\n      const status = payment.body.status;\n      const email = payment.body.metadata.id_user;\n      console.log(status, paymentId, typeof paymentId);\n      const IdsMercadopago = await getMercadoPagoId();\n      //FIltramos de los que tiene solo NULL\n      let ids = [];\n      IdsMercadopago.map(id => {\n        if (id != null) {\n          ids.push(id);\n        }\n      });\n      console.log(ids);\n      let IdEncontrado = ids.find(id => id.mercadopagoId === paymentId);\n      console.log(IdEncontrado, paymentId);\n      if (!IdEncontrado) {\n        console.log(\"No exite en la base de datos el id de mercado pago\");\n        if (status === \"approved\") {\n          const data_user = await getDataUser(email);\n          console.log(data_user.dni);\n          console.log(\"Carritoooo\");\n          await ConfirmaCarrito(data_user.dni);\n          console.log(\"VENTAAAAA\");\n          await ConfirmaVenta(data_user.dni, paymentId);\n          console.log(\"Emaaaaill\");\n          await MandarEmail(email);\n        } else {\n          console.log(\"Compra no aprovada\");\n        }\n      } else {\n        console.log(\"COmpra ya realizada\");\n      }\n      res.status(200);\n    } else {\n      res.status(400);\n    }\n  } catch (err) {\n    console.log(err);\n    return err;\n  }\n};\napp.post(\"/notificar\", async (req, res) => {\n  await notificar(req, res);\n});\napp.use(postgraphile(`postgres://${userDb}:${userPass}@${host}/${database}` || \"postgres://postgres:postgres@127.0.0.1:5432/name-databases\", [\"public\"], {\n  watchPg: true,\n  graphiql: true,\n  enableCors: true,\n  enhanceGraphiql: true,\n  showErrorStack: true,\n  appendPlugins: [MySchemaCategoriasPlugins]\n}));\nconst main = async () => {\n  const port = 5000;\n  await app.listen(port);\n  console.log(`Conectado pa http://localhost:${port}/graphiql`);\n};\nmain();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["express","require","mercadopago","postgraphile","nodemailer","dotoenv","config","userDb","process","env","USER_DB","userPass","USER_PASS","host","HOST","database","BBDD","MandarEmail","email","mailTransporter","createTransport","service","auth","user","EMAIL_FUNKO","pass","PASS_FUNKO","detalle","from","to","subject","text","sendMail","err","console","log","ConfirmaCarrito","dni","response","fetch","method","headers","body","JSON","stringify","query","respuesta","json","ConfirmaVenta","mercadopago_id","getDataUser","data","usuarioByEmail","getMercadoPagoId","allVentausuarios","nodes","MySchemaCategoriasPlugins","app","notificar","req","res","configure","access_token","payment","topic","type","paymentId","id","findById","items","additional_info","status","metadata","id_user","IdsMercadopago","ids","map","push","IdEncontrado","find","mercadopagoId","data_user","post","use","watchPg","graphiql","enableCors","enhanceGraphiql","showErrorStack","appendPlugins","main","port","listen"],"sourceRoot":"/home/alex/FunkoCdelU_App/Backend/","sources":["index.js"],"sourcesContent":["const express = require(\"express\");\nconst mercadopago = require(\"mercadopago\");\nconst { postgraphile } = require(\"postgraphile\");\nconst nodemailer = require(\"nodemailer\");\nlet dotoenv = require(\"dotenv\");\ndotoenv.config();\n\nconst userDb = process.env.USER_DB;\nconst userPass = process.env.USER_PASS;\nconst host = process.env.HOST;\nconst database = process.env.BBDD;\n\n/*Mandar correo de confirmaciÃ³n al usuario */\n\nasync function MandarEmail(email) {\n  let mailTransporter = nodemailer.createTransport({\n    service: \"gmail\",\n    auth: {\n      user: process.env.EMAIL_FUNKO,\n      pass: process.env.PASS_FUNKO,\n    },\n  });\n\n  let detalle = {\n    from: \"funkocdelu@gmail.com\",\n    to: email,\n    subject: \"Gracias por su compra\",\n    text: \"Su compra fue aprobada\",\n  };\n\n  mailTransporter.sendMail(detalle, (err) => {\n    if (err) {\n      console.log(\"Correo no enviado\");\n    } else {\n      console.log(\"Correo enviado\");\n    }\n  });\n}\n\nasync function ConfirmaCarrito(dni) {\n  const response = await fetch(\"http://localhost:5000/graphql\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      query: `mutation {\n              confirmarComprarDelCarrito(input: {dniUser: ${dni}}) {\n                clientMutationId\n              }\n            }\n            \n            `,\n    }),\n  });\n\n  const respuesta = await response.json();\n  console.log(respuesta);\n}\n\nasync function ConfirmaVenta(dni, mercadopago_id) {\n  const response = await fetch(\"http://localhost:5000/graphql\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      query: `mutation {\n        confirmarEstadoDeVenta(input: {dni: ${dni}, mercadopagoId: \"${mercadopago_id}\"}) {\n          clientMutationId\n        }\n      }\n      \n            `,\n    }),\n  });\n\n  const respuesta = await response.json();\n  console.log(respuesta);\n}\n\nasync function getDataUser(email) {\n  const response = await fetch(\"http://localhost:5000/graphql\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      query: `query MyQuery {\n              usuarioByEmail(email: \"${email}\") {\n                dni\n              }\n            }\n            \n            `,\n    }),\n  });\n\n  const respuesta = await response.json();\n  return respuesta.data.usuarioByEmail;\n}\n\nasync function getMercadoPagoId() {\n  const response = await fetch(\"http://localhost:5000/graphql\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      query: `query MyQuery {\n                    allVentausuarios {\n                    nodes {\n                    mercadopagoId\n          }\n        }\n      }\n      \n            \n            `,\n    }),\n  });\n\n  const respuesta = await response.json();\n  return respuesta.data.allVentausuarios.nodes;\n}\n\n/*1Backend 2 ngrok=port 5000 */\nconst {\n  MySchemaCategoriasPlugins,\n} = require(\"./Schemas/Categorias/Categorias.js\");\nconst app = express();\n\nconst notificar = async (req, res) => {\n  try {\n    mercadopago.configure({\n      access_token:\n        \"TEST-5873713881795945-030921-d57166b7b2e69778a0aee6a8bca9190b-1327386578\",\n    });\n\n    const { query } = req;\n\n    let payment;\n\n    const topic = query.topic || query.type;\n\n    if (topic == \"payment\") {\n      const paymentId = query.id || query[\"data.id\"];\n      payment = await mercadopago.payment.findById(paymentId);\n      const items = payment.body.additional_info.items;\n      const status = payment.body.status;\n      const email = payment.body.metadata.id_user;\n      console.log(status, paymentId, typeof paymentId);\n      \n      const IdsMercadopago = await getMercadoPagoId()\n      //FIltramos de los que tiene solo NULL\n      let ids = []\n      IdsMercadopago.map( (id) => {\n        if (id != null){\n          ids.push(id)\n        }\n      })\n      console.log(ids)\n      \n      let IdEncontrado = ids.find( (id) => id.mercadopagoId === paymentId)\n      console.log(IdEncontrado, paymentId)\n\n      if (!IdEncontrado) {\n        console.log(\"No exite en la base de datos el id de mercado pago\")\n        if (status === \"approved\") {\n          const data_user = await getDataUser(email)\n          console.log(data_user.dni)  \n          console.log(\"Carritoooo\")\n          await ConfirmaCarrito(data_user.dni)\n          console.log(\"VENTAAAAA\")   \n          await ConfirmaVenta(data_user.dni,paymentId)   \n          console.log(\"Emaaaaill\")   \n          await MandarEmail(email);\n\n        }\n        else{\n          console.log(\"Compra no aprovada\")\n        }\n      }\n      else{\n        console.log(\"COmpra ya realizada\")\n        \n      }\n\n\n      \n     \n      res.status(200);\n    } else {\n      res.status(400);\n    }\n  } catch (err) {\n    console.log(err);\n    return err;\n  }\n};\n\napp.post(\"/notificar\", async (req, res) => {\n  await notificar(req, res);\n});\n\napp.use(\n  postgraphile(\n    `postgres://${userDb}:${userPass}@${host}/${database}` ||\n      \"postgres://postgres:postgres@127.0.0.1:5432/name-databases\",\n    [\"public\"],\n    {\n      watchPg: true,\n      graphiql: true,\n      enableCors: true,\n      enhanceGraphiql: true,\n      showErrorStack: true,\n      appendPlugins: [MySchemaCategoriasPlugins],\n    }\n  )\n);\n\nconst main = async () => {\n  const port = 5000;\n  await app.listen(port);\n  console.log(`Conectado pa http://localhost:${port}/graphiql`);\n\n  \n};\n\nmain();\n"],"mappings":"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"}},"mtime":1678981221966},"{\"assumptions\":{},\"sourceRoot\":\"/home/alex/FunkoCdelU_App/Backend/Schemas/Categorias/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/alex/FunkoCdelU_App/Backend\",\"filename\":\"/home/alex/FunkoCdelU_App/Backend/Schemas/Categorias/Categorias.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/alex/FunkoCdelU_App/Backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.19.3:development":{"value":{"code":"const {\n  makeExtendSchemaPlugin,\n  gql\n} = require(\"graphile-utils\");\nconst MySchemaCategoriasPlugins = makeExtendSchemaPlugin(build => {\n  const {\n    pgSql: sql\n  } = build;\n  return {\n    typeDefs: gql`\n  \n      extend type Query {\n          # Individual record\n          randomCategoria: Categoria\n  \n          # List record\n          randomCategoriaList: [Categoria!]\n        }\n      `,\n    resolvers: {\n      Query: {\n        /*\n         * Individual record needs to return just one row but\n         * `selectGraphQLResultFromTable` always returns an array; so the\n         * resolver is responsible for turning the array into a single record.\n         */\n        randomCategoria: async (_query, args, context, resolveInfo) => {\n          // Remember: resolveInfo.graphile.selectGraphQLResultFromTable is where the PostGraphile\n          // look-ahead magic happens!\n          const rows = await resolveInfo.graphile.selectGraphQLResultFromTable(sql.fragment`public.categoria`, (tableAlias, queryBuilder) => {\n            queryBuilder.orderBy(sql.fragment`random()`);\n            queryBuilder.limit(1);\n          });\n          return rows[0];\n        },\n        /*\n         * Connection and list resolvers are identical; PostGraphile handles\n         * the complexities for you. We've simplified these down to a direct\n         * call to `selectGraphQLResultFromTable` but you may wish to wrap this\n         * with additional logic.\n         */\n        randomCategoriaList: (_query, args, context, resolveInfo) => resolveInfo.graphile.selectGraphQLResultFromTable(sql.fragment`public.categoria`, (tableAlias, queryBuilder) => {\n          queryBuilder.orderBy(sql.fragment`random()`);\n        })\n      }\n    }\n  };\n});\nmodule.exports = {\n  MySchemaCategoriasPlugins\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtYWtlRXh0ZW5kU2NoZW1hUGx1Z2luIiwiZ3FsIiwicmVxdWlyZSIsIk15U2NoZW1hQ2F0ZWdvcmlhc1BsdWdpbnMiLCJidWlsZCIsInBnU3FsIiwic3FsIiwidHlwZURlZnMiLCJyZXNvbHZlcnMiLCJRdWVyeSIsInJhbmRvbUNhdGVnb3JpYSIsIl9xdWVyeSIsImFyZ3MiLCJjb250ZXh0IiwicmVzb2x2ZUluZm8iLCJyb3dzIiwiZ3JhcGhpbGUiLCJzZWxlY3RHcmFwaFFMUmVzdWx0RnJvbVRhYmxlIiwiZnJhZ21lbnQiLCJ0YWJsZUFsaWFzIiwicXVlcnlCdWlsZGVyIiwib3JkZXJCeSIsImxpbWl0IiwicmFuZG9tQ2F0ZWdvcmlhTGlzdCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6Ii9ob21lL2FsZXgvRnVua29DZGVsVV9BcHAvQmFja2VuZC9TY2hlbWFzL0NhdGVnb3JpYXMvIiwic291cmNlcyI6WyJDYXRlZ29yaWFzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgbWFrZUV4dGVuZFNjaGVtYVBsdWdpbiwgZ3FsIH0gPSByZXF1aXJlKFwiZ3JhcGhpbGUtdXRpbHNcIik7XG5cblxuY29uc3QgIE15U2NoZW1hQ2F0ZWdvcmlhc1BsdWdpbnMgPSBtYWtlRXh0ZW5kU2NoZW1hUGx1Z2luKGJ1aWxkID0+IHtcbiAgICBjb25zdCB7IHBnU3FsOiBzcWwgfSA9IGJ1aWxkO1xuICAgIHJldHVybiB7XG4gICAgICB0eXBlRGVmczogZ3FsYFxuICBcbiAgICAgIGV4dGVuZCB0eXBlIFF1ZXJ5IHtcbiAgICAgICAgICAjIEluZGl2aWR1YWwgcmVjb3JkXG4gICAgICAgICAgcmFuZG9tQ2F0ZWdvcmlhOiBDYXRlZ29yaWFcbiAgXG4gICAgICAgICAgIyBMaXN0IHJlY29yZFxuICAgICAgICAgIHJhbmRvbUNhdGVnb3JpYUxpc3Q6IFtDYXRlZ29yaWEhXVxuICAgICAgICB9XG4gICAgICBgLFxuICAgICAgcmVzb2x2ZXJzOiB7XG4gICAgICAgIFF1ZXJ5OiB7XG4gICAgICAgICAgLypcbiAgICAgICAgICAgKiBJbmRpdmlkdWFsIHJlY29yZCBuZWVkcyB0byByZXR1cm4ganVzdCBvbmUgcm93IGJ1dFxuICAgICAgICAgICAqIGBzZWxlY3RHcmFwaFFMUmVzdWx0RnJvbVRhYmxlYCBhbHdheXMgcmV0dXJucyBhbiBhcnJheTsgc28gdGhlXG4gICAgICAgICAgICogcmVzb2x2ZXIgaXMgcmVzcG9uc2libGUgZm9yIHR1cm5pbmcgdGhlIGFycmF5IGludG8gYSBzaW5nbGUgcmVjb3JkLlxuICAgICAgICAgICAqL1xuICAgICAgICAgIHJhbmRvbUNhdGVnb3JpYTogYXN5bmMgKF9xdWVyeSwgYXJncywgY29udGV4dCwgcmVzb2x2ZUluZm8pID0+IHtcbiAgICAgICAgICAgIC8vIFJlbWVtYmVyOiByZXNvbHZlSW5mby5ncmFwaGlsZS5zZWxlY3RHcmFwaFFMUmVzdWx0RnJvbVRhYmxlIGlzIHdoZXJlIHRoZSBQb3N0R3JhcGhpbGVcbiAgICAgICAgICAgIC8vIGxvb2stYWhlYWQgbWFnaWMgaGFwcGVucyFcbiAgICAgICAgICAgIGNvbnN0IHJvd3MgPSBhd2FpdCByZXNvbHZlSW5mby5ncmFwaGlsZS5zZWxlY3RHcmFwaFFMUmVzdWx0RnJvbVRhYmxlKFxuICAgICAgICAgICAgICBzcWwuZnJhZ21lbnRgcHVibGljLmNhdGVnb3JpYWAsXG4gICAgICAgICAgICAgICh0YWJsZUFsaWFzLCBxdWVyeUJ1aWxkZXIpID0+IHtcbiAgICAgICAgICAgICAgICBxdWVyeUJ1aWxkZXIub3JkZXJCeShzcWwuZnJhZ21lbnRgcmFuZG9tKClgKTtcbiAgICAgICAgICAgICAgICBxdWVyeUJ1aWxkZXIubGltaXQoMSk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICk7XG4gICAgICAgICAgICByZXR1cm4gcm93c1swXTtcbiAgICAgICAgICB9LFxuICBcbiAgICAgICAgICAvKlxuICAgICAgICAgICAqIENvbm5lY3Rpb24gYW5kIGxpc3QgcmVzb2x2ZXJzIGFyZSBpZGVudGljYWw7IFBvc3RHcmFwaGlsZSBoYW5kbGVzXG4gICAgICAgICAgICogdGhlIGNvbXBsZXhpdGllcyBmb3IgeW91LiBXZSd2ZSBzaW1wbGlmaWVkIHRoZXNlIGRvd24gdG8gYSBkaXJlY3RcbiAgICAgICAgICAgKiBjYWxsIHRvIGBzZWxlY3RHcmFwaFFMUmVzdWx0RnJvbVRhYmxlYCBidXQgeW91IG1heSB3aXNoIHRvIHdyYXAgdGhpc1xuICAgICAgICAgICAqIHdpdGggYWRkaXRpb25hbCBsb2dpYy5cbiAgICAgICAgICAgKi9cbiAgICAgICAgICByYW5kb21DYXRlZ29yaWFMaXN0OiAoX3F1ZXJ5LCBhcmdzLCBjb250ZXh0LCByZXNvbHZlSW5mbykgPT5cbiAgICAgICAgICAgIHJlc29sdmVJbmZvLmdyYXBoaWxlLnNlbGVjdEdyYXBoUUxSZXN1bHRGcm9tVGFibGUoXG4gICAgICAgICAgICAgIHNxbC5mcmFnbWVudGBwdWJsaWMuY2F0ZWdvcmlhYCxcbiAgICAgICAgICAgICAgKHRhYmxlQWxpYXMsIHF1ZXJ5QnVpbGRlcikgPT4ge1xuICAgICAgICAgICAgICAgIHF1ZXJ5QnVpbGRlci5vcmRlckJ5KHNxbC5mcmFnbWVudGByYW5kb20oKWApO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICApLFxuICAgICAgICB9XG4gICAgICB9LFxuICAgIH07XG4gIH0pO1xuICBcbiAgbW9kdWxlLmV4cG9ydHMgPSB7TXlTY2hlbWFDYXRlZ29yaWFzUGx1Z2luc307Il0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNO0VBQUVBLHNCQUFzQjtFQUFFQztBQUFJLENBQUMsR0FBR0MsT0FBTyxDQUFDLGdCQUFnQixDQUFDO0FBR2pFLE1BQU9DLHlCQUF5QixHQUFHSCxzQkFBc0IsQ0FBQ0ksS0FBSyxJQUFJO0VBQy9ELE1BQU07SUFBRUMsS0FBSyxFQUFFQztFQUFJLENBQUMsR0FBR0YsS0FBSztFQUM1QixPQUFPO0lBQ0xHLFFBQVEsRUFBRU4sR0FBSTtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztJQUNETyxTQUFTLEVBQUU7TUFDVEMsS0FBSyxFQUFFO1FBQ0w7QUFDVjtBQUNBO0FBQ0E7QUFDQTtRQUNVQyxlQUFlLEVBQUUsT0FBT0MsTUFBTSxFQUFFQyxJQUFJLEVBQUVDLE9BQU8sRUFBRUMsV0FBVyxLQUFLO1VBQzdEO1VBQ0E7VUFDQSxNQUFNQyxJQUFJLEdBQUcsTUFBTUQsV0FBVyxDQUFDRSxRQUFRLENBQUNDLDRCQUE0QixDQUNsRVgsR0FBRyxDQUFDWSxRQUFTLGtCQUFpQixFQUM5QixDQUFDQyxVQUFVLEVBQUVDLFlBQVksS0FBSztZQUM1QkEsWUFBWSxDQUFDQyxPQUFPLENBQUNmLEdBQUcsQ0FBQ1ksUUFBUyxVQUFTLENBQUM7WUFDNUNFLFlBQVksQ0FBQ0UsS0FBSyxDQUFDLENBQUMsQ0FBQztVQUN2QixDQUFDLENBQ0Y7VUFDRCxPQUFPUCxJQUFJLENBQUMsQ0FBQyxDQUFDO1FBQ2hCLENBQUM7UUFFRDtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7UUFDVVEsbUJBQW1CLEVBQUUsQ0FBQ1osTUFBTSxFQUFFQyxJQUFJLEVBQUVDLE9BQU8sRUFBRUMsV0FBVyxLQUN0REEsV0FBVyxDQUFDRSxRQUFRLENBQUNDLDRCQUE0QixDQUMvQ1gsR0FBRyxDQUFDWSxRQUFTLGtCQUFpQixFQUM5QixDQUFDQyxVQUFVLEVBQUVDLFlBQVksS0FBSztVQUM1QkEsWUFBWSxDQUFDQyxPQUFPLENBQUNmLEdBQUcsQ0FBQ1ksUUFBUyxVQUFTLENBQUM7UUFDOUMsQ0FBQztNQUVQO0lBQ0Y7RUFDRixDQUFDO0FBQ0gsQ0FBQyxDQUFDO0FBRUZNLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHO0VBQUN0QjtBQUF5QixDQUFDIn0=","map":{"version":3,"names":["makeExtendSchemaPlugin","gql","require","MySchemaCategoriasPlugins","build","pgSql","sql","typeDefs","resolvers","Query","randomCategoria","_query","args","context","resolveInfo","rows","graphile","selectGraphQLResultFromTable","fragment","tableAlias","queryBuilder","orderBy","limit","randomCategoriaList","module","exports"],"sourceRoot":"/home/alex/FunkoCdelU_App/Backend/Schemas/Categorias/","sources":["Categorias.js"],"sourcesContent":["const { makeExtendSchemaPlugin, gql } = require(\"graphile-utils\");\n\n\nconst  MySchemaCategoriasPlugins = makeExtendSchemaPlugin(build => {\n    const { pgSql: sql } = build;\n    return {\n      typeDefs: gql`\n  \n      extend type Query {\n          # Individual record\n          randomCategoria: Categoria\n  \n          # List record\n          randomCategoriaList: [Categoria!]\n        }\n      `,\n      resolvers: {\n        Query: {\n          /*\n           * Individual record needs to return just one row but\n           * `selectGraphQLResultFromTable` always returns an array; so the\n           * resolver is responsible for turning the array into a single record.\n           */\n          randomCategoria: async (_query, args, context, resolveInfo) => {\n            // Remember: resolveInfo.graphile.selectGraphQLResultFromTable is where the PostGraphile\n            // look-ahead magic happens!\n            const rows = await resolveInfo.graphile.selectGraphQLResultFromTable(\n              sql.fragment`public.categoria`,\n              (tableAlias, queryBuilder) => {\n                queryBuilder.orderBy(sql.fragment`random()`);\n                queryBuilder.limit(1);\n              }\n            );\n            return rows[0];\n          },\n  \n          /*\n           * Connection and list resolvers are identical; PostGraphile handles\n           * the complexities for you. We've simplified these down to a direct\n           * call to `selectGraphQLResultFromTable` but you may wish to wrap this\n           * with additional logic.\n           */\n          randomCategoriaList: (_query, args, context, resolveInfo) =>\n            resolveInfo.graphile.selectGraphQLResultFromTable(\n              sql.fragment`public.categoria`,\n              (tableAlias, queryBuilder) => {\n                queryBuilder.orderBy(sql.fragment`random()`);\n              }\n            ),\n        }\n      },\n    };\n  });\n  \n  module.exports = {MySchemaCategoriasPlugins};"],"mappings":"AAAA,MAAM;EAAEA,sBAAsB;EAAEC;AAAI,CAAC,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAGjE,MAAOC,yBAAyB,GAAGH,sBAAsB,CAACI,KAAK,IAAI;EAC/D,MAAM;IAAEC,KAAK,EAAEC;EAAI,CAAC,GAAGF,KAAK;EAC5B,OAAO;IACLG,QAAQ,EAAEN,GAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;IACDO,SAAS,EAAE;MACTC,KAAK,EAAE;QACL;AACV;AACA;AACA;AACA;QACUC,eAAe,EAAE,OAAOC,MAAM,EAAEC,IAAI,EAAEC,OAAO,EAAEC,WAAW,KAAK;UAC7D;UACA;UACA,MAAMC,IAAI,GAAG,MAAMD,WAAW,CAACE,QAAQ,CAACC,4BAA4B,CAClEX,GAAG,CAACY,QAAS,kBAAiB,EAC9B,CAACC,UAAU,EAAEC,YAAY,KAAK;YAC5BA,YAAY,CAACC,OAAO,CAACf,GAAG,CAACY,QAAS,UAAS,CAAC;YAC5CE,YAAY,CAACE,KAAK,CAAC,CAAC,CAAC;UACvB,CAAC,CACF;UACD,OAAOP,IAAI,CAAC,CAAC,CAAC;QAChB,CAAC;QAED;AACV;AACA;AACA;AACA;AACA;QACUQ,mBAAmB,EAAE,CAACZ,MAAM,EAAEC,IAAI,EAAEC,OAAO,EAAEC,WAAW,KACtDA,WAAW,CAACE,QAAQ,CAACC,4BAA4B,CAC/CX,GAAG,CAACY,QAAS,kBAAiB,EAC9B,CAACC,UAAU,EAAEC,YAAY,KAAK;UAC5BA,YAAY,CAACC,OAAO,CAACf,GAAG,CAACY,QAAS,UAAS,CAAC;QAC9C,CAAC;MAEP;IACF;EACF,CAAC;AACH,CAAC,CAAC;AAEFM,MAAM,CAACC,OAAO,GAAG;EAACtB;AAAyB,CAAC"}},"mtime":1665494206423},"{\"assumptions\":{},\"sourceRoot\":\"/home/alex/FunkoCdelU_App/2_Backend/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/alex/FunkoCdelU_App/2_Backend\",\"filename\":\"/home/alex/FunkoCdelU_App/2_Backend/index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/alex/FunkoCdelU_App/2_Backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.19.3:development":{"value":{"code":"const express = require(\"express\");\nconst mercadopago = require(\"mercadopago\");\nconst {\n  postgraphile\n} = require(\"postgraphile\");\nconst nodemailer = require(\"nodemailer\");\nconst multer = require('multer');\nconst path = require('path');\nconst Funcion_BBDD = require(\"./src/BBDD_Function\");\nconst fs = require('fs-extra');\nlet dotoenv = require(\"dotenv\");\ndotoenv.config();\nconst userDb = process.env.USER_DB;\nconst userPass = process.env.USER_PASS;\nconst host = process.env.HOST;\nconst database = process.env.BBDD;\nconst app = express();\n\n/*Mandar correo de confirmaciÃ³n al usuario */\n\nconst emailHtmlPath = path.join(__dirname, 'email', 'index.html');\nconst email_html = fs.readFileSync(emailHtmlPath, 'utf8');\nconst logoPath = path.join(__dirname, 'email', 'logo.png');\nconst logo = fs.readFileSync(logoPath);\nconst filePath = path.join(__dirname, 'email', 'funkos parte foot.png');\nconst Foot = fs.readFileSync(filePath);\nasync function MandarEmail(email) {\n  let mailTransporter = nodemailer.createTransport({\n    service: \"gmail\",\n    auth: {\n      user: process.env.EMAIL_FUNKO,\n      pass: process.env.PASS_FUNKO\n    }\n  });\n  let detalle = {\n    from: \"funkocdelu@gmail.com\",\n    to: email,\n    subject: \"Gracias por su compra\",\n    html: email_html,\n    attachments: [{\n      filename: 'logo.png',\n      content: logo,\n      cid: 'logo'\n    }, {\n      filename: 'funkos parte foot.png',\n      content: Foot,\n      cid: 'foot'\n    }]\n  };\n  mailTransporter.sendMail(detalle, err => {\n    if (err) {\n      console.log(\"Correo no enviado\");\n    } else {\n      console.log(\"Correo enviado\");\n    }\n  });\n}\n/*1Backend 2 ngrok=port 5000 */\nconst notificar = async (req, res) => {\n  try {\n    mercadopago.configure({\n      access_token: \"TEST-5873713881795945-030921-d57166b7b2e69778a0aee6a8bca9190b-1327386578\"\n    });\n    const {\n      query\n    } = req;\n    let payment;\n    const topic = query.topic || query.type;\n    if (topic == \"payment\") {\n      const paymentId = query.id || query[\"data.id\"];\n      payment = await mercadopago.payment.findById(paymentId);\n      //const items = payment.body.additional_info.items;\n      const status = payment.body.status;\n      const email = payment.body.metadata.id_user;\n      console.log(status, paymentId, typeof paymentId);\n      const IdsMercadopago = await Funcion_BBDD.getMercadoPagoId();\n      //FIltramos de los que tiene solo NULL\n      let ids = [];\n      IdsMercadopago.map(id => {\n        if (id != null) {\n          ids.push(id);\n        }\n      });\n      console.log(ids);\n      let IdEncontrado = ids.find(id => id.mercadopagoId === paymentId);\n      console.log(IdEncontrado, paymentId);\n      if (!IdEncontrado) {\n        console.log(\"No exite en la base de datos el id de mercado pago\");\n        if (status === \"approved\") {\n          const data_user = await Funcion_BBDD.getDataUser(email);\n          console.log(data_user.dni);\n          console.log(\"Carritoooo\");\n          await Funcion_BBDD.ConfirmaCarrito(data_user.dni);\n          console.log(\"VENTAAAAA\");\n          await Funcion_BBDD.ConfirmaVenta(data_user.dni, paymentId);\n          console.log(\"Emaaaaill\");\n          await MandarEmail(email);\n        } else {\n          console.log(\"Compra no aprobada...\");\n        }\n      } else {\n        console.log(\"Compra ya realizada...\");\n      }\n      res.status(200);\n    } else {\n      res.status(400);\n    }\n  } catch (err) {\n    console.log(err);\n    return err;\n  }\n};\nconst CURRENT_DIR = path.dirname(__dirname);\nconst MIMETYPES = ['image/jpeg', 'image/png', 'image/jpg', 'image/webp'];\nconst multerUpload = multer({\n  storage: multer.diskStorage({\n    destination: path.join(CURRENT_DIR, '/2_Backend/uploads'),\n    filename: (req, file, cb) => {\n      const fileExtension = path.extname(file.originalname);\n      const fileName = file.originalname.split(fileExtension)[0];\n      cb(null, `${fileName}${fileExtension}`);\n    }\n  }),\n  fileFilter: (req, file, cb) => {\n    if (MIMETYPES.includes(file.mimetype)) cb(null, true);else cb(new Error(`Only ${MIMETYPES.join(' ')} mimetypes are allowed`));\n  },\n  limits: {\n    fieldSize: 10000000\n  }\n});\n\n// Ruta que maneja la carga de la imagen \napp.post('/upload', multerUpload.single('image'), async (req, res) => {\n  console.log(\"Imagen recibida\", req.file);\n  try {\n    const imageUrl = req.file.path;\n    res.json({\n      imageUrl\n    });\n  } catch (error) {\n    res.status(500).send(error.message);\n  }\n});\napp.post(\"/notificar\", async (req, res) => {\n  await notificar(req, res);\n});\n\n//POdemos servir las imagenes al frontend con esta opcion\n//app.use('/public_funko_img', express.static(path.join(CURRENT_DIR, '/2_Backend/uploads')));\n\nconst uploadsPath = path.join(__dirname, 'uploads');\napp.use('/public_funko_img', express.static(uploadsPath));\napp.use(postgraphile(`postgres://${userDb}:${userPass}@${host}/${database}` || \"postgres://postgres:postgres@127.0.0.1:5432/name-databases\", [\"public\"], {\n  watchPg: true,\n  graphiql: true,\n  enableCors: true,\n  enhanceGraphiql: true,\n  showErrorStack: true\n}));\nconst main = async () => {\n  const port = 5000;\n  await app.listen(port);\n  console.log(`Conectado pa http://localhost:${port}/graphiql`);\n};\nmain();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["express","require","mercadopago","postgraphile","nodemailer","multer","path","Funcion_BBDD","fs","dotoenv","config","userDb","process","env","USER_DB","userPass","USER_PASS","host","HOST","database","BBDD","app","emailHtmlPath","join","__dirname","email_html","readFileSync","logoPath","logo","filePath","Foot","MandarEmail","email","mailTransporter","createTransport","service","auth","user","EMAIL_FUNKO","pass","PASS_FUNKO","detalle","from","to","subject","html","attachments","filename","content","cid","sendMail","err","console","log","notificar","req","res","configure","access_token","query","payment","topic","type","paymentId","id","findById","status","body","metadata","id_user","IdsMercadopago","getMercadoPagoId","ids","map","push","IdEncontrado","find","mercadopagoId","data_user","getDataUser","dni","ConfirmaCarrito","ConfirmaVenta","CURRENT_DIR","dirname","MIMETYPES","multerUpload","storage","diskStorage","destination","file","cb","fileExtension","extname","originalname","fileName","split","fileFilter","includes","mimetype","Error","limits","fieldSize","post","single","imageUrl","json","error","send","message","uploadsPath","use","static","watchPg","graphiql","enableCors","enhanceGraphiql","showErrorStack","main","port","listen"],"sourceRoot":"/home/alex/FunkoCdelU_App/2_Backend/","sources":["index.js"],"sourcesContent":["const express = require(\"express\");\nconst mercadopago = require(\"mercadopago\");\nconst { postgraphile } = require(\"postgraphile\");\nconst nodemailer = require(\"nodemailer\");\nconst multer = require('multer');\nconst path = require('path');\nconst Funcion_BBDD = require(\"./src/BBDD_Function\")\nconst fs = require('fs-extra');\n\nlet dotoenv = require(\"dotenv\");\n\n\ndotoenv.config();\n\nconst userDb = process.env.USER_DB;\nconst userPass = process.env.USER_PASS;\nconst host = process.env.HOST;\nconst database = process.env.BBDD;\n\nconst app = express();\n\n/*Mandar correo de confirmaciÃ³n al usuario */\n\n\n\nconst emailHtmlPath = path.join(__dirname, 'email', 'index.html');\nconst email_html = fs.readFileSync(emailHtmlPath, 'utf8');\n\nconst logoPath = path.join(__dirname, 'email', 'logo.png');\nconst logo = fs.readFileSync(logoPath);\nconst filePath = path.join(__dirname, 'email', 'funkos parte foot.png');\nconst Foot = fs.readFileSync(filePath);\n\nasync function MandarEmail(email) {\n  let mailTransporter = nodemailer.createTransport({\n    service: \"gmail\",\n    auth: {\n      user: process.env.EMAIL_FUNKO,\n      pass: process.env.PASS_FUNKO,\n    },\n  });\n\n  let detalle = {\n    from: \"funkocdelu@gmail.com\",\n    to: email,\n    subject: \"Gracias por su compra\",\n    html: email_html,\n    attachments: [{\n      filename: 'logo.png',\n      content: logo,\n      cid: 'logo'\n    }\n      ,\n    {\n      filename: 'funkos parte foot.png',\n      content: Foot,\n      cid: 'foot'\n    }\n    \n  ]\n  };\n\n  mailTransporter.sendMail(detalle, (err) => {\n    if (err) {\n      console.log(\"Correo no enviado\");\n    } else {\n      console.log(\"Correo enviado\");\n    }\n  });\n}\n/*1Backend 2 ngrok=port 5000 */\nconst notificar = async (req, res) => {\n  try {\n    mercadopago.configure({\n      access_token:\n        \"TEST-5873713881795945-030921-d57166b7b2e69778a0aee6a8bca9190b-1327386578\",\n    });\n\n    const { query } = req;\n\n    let payment;\n\n    const topic = query.topic || query.type;\n\n    if (topic == \"payment\") {\n      const paymentId = query.id || query[\"data.id\"];\n      payment = await mercadopago.payment.findById(paymentId);\n      //const items = payment.body.additional_info.items;\n      const status = payment.body.status;\n      const email = payment.body.metadata.id_user;\n      console.log(status, paymentId, typeof paymentId);\n      \n      const IdsMercadopago = await Funcion_BBDD.getMercadoPagoId()\n      //FIltramos de los que tiene solo NULL\n      let ids = []\n      IdsMercadopago.map( (id) => {\n        if (id != null){\n          ids.push(id)\n        }\n      })\n      console.log(ids)\n      \n      let IdEncontrado = ids.find( (id) => id.mercadopagoId === paymentId)\n      console.log(IdEncontrado, paymentId)\n\n      if (!IdEncontrado) {\n        console.log(\"No exite en la base de datos el id de mercado pago\")\n        if (status === \"approved\") {\n          const data_user = await Funcion_BBDD.getDataUser(email)\n          console.log(data_user.dni)  \n          console.log(\"Carritoooo\")\n          await Funcion_BBDD.ConfirmaCarrito(data_user.dni)\n          console.log(\"VENTAAAAA\")   \n          await Funcion_BBDD.ConfirmaVenta(data_user.dni,paymentId)   \n          console.log(\"Emaaaaill\")   \n          await MandarEmail(email);\n\n        }\n        else{\n          console.log(\"Compra no aprobada...\")\n        }\n      }\n      else{\n        console.log(\"Compra ya realizada...\")\n        \n      }\n      res.status(200);\n      \n    } else {\n      res.status(400);\n    }\n  } catch (err) {\n    console.log(err);\n    return err;\n  }\n};\n\nconst CURRENT_DIR = path.dirname(__dirname);\nconst MIMETYPES = ['image/jpeg', 'image/png','image/jpg','image/webp'];\n\nconst multerUpload = multer({\n    storage: multer.diskStorage({\n        destination: path.join(CURRENT_DIR, '/2_Backend/uploads'),\n        filename: (req, file, cb) => {\n            const fileExtension = path.extname(file.originalname);\n            const fileName = file.originalname.split(fileExtension)[0];\n\n            cb(null, `${fileName}${fileExtension}`);\n        },\n    }),\n    fileFilter: (req, file, cb) => {\n        if (MIMETYPES.includes(file.mimetype)) cb(null, true);\n        else cb(new Error(`Only ${MIMETYPES.join(' ')} mimetypes are allowed`));\n    },\n    limits: {\n        fieldSize: 10000000,\n    },\n});\n\n\n// Ruta que maneja la carga de la imagen \napp.post('/upload', multerUpload.single('image'), async (req, res) => {\n  console.log(\"Imagen recibida\",req.file)\n\n  try {\n    const imageUrl = req.file.path;\n    res.json({ imageUrl });\n  } catch (error) {\n    res.status(500).send(error.message);\n  }\n});\n\napp.post(\"/notificar\", async (req, res) => {\n  await notificar(req, res);\n});\n\n//POdemos servir las imagenes al frontend con esta opcion\n//app.use('/public_funko_img', express.static(path.join(CURRENT_DIR, '/2_Backend/uploads')));\n\nconst uploadsPath = path.join(__dirname, 'uploads');\napp.use('/public_funko_img', express.static(uploadsPath));\n\napp.use(\n  postgraphile(\n    `postgres://${userDb}:${userPass}@${host}/${database}` ||\n      \"postgres://postgres:postgres@127.0.0.1:5432/name-databases\",\n    [\"public\"],\n    {\n      watchPg: true,\n      graphiql: true,\n      enableCors: true,\n      enhanceGraphiql: true,\n      showErrorStack: true,\n    }\n  )\n);\n\nconst main = async () => {\n  const port = 5000;\n  await app.listen(port);\n  console.log(`Conectado pa http://localhost:${port}/graphiql`);\n\n  \n};\n\nmain();\n"],"mappings":"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"}},"mtime":1683303308105},"{\"assumptions\":{},\"sourceRoot\":\"/home/alex/FunkoCdelU_App/2_Backend/Schemas/Categorias/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/alex/FunkoCdelU_App/2_Backend\",\"filename\":\"/home/alex/FunkoCdelU_App/2_Backend/Schemas/Categorias/Categorias.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/alex/FunkoCdelU_App/2_Backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.19.3:development":{"value":{"code":"const {\n  makeExtendSchemaPlugin,\n  gql\n} = require(\"graphile-utils\");\nconst MySchemaCategoriasPlugins = makeExtendSchemaPlugin(build => {\n  const {\n    pgSql: sql\n  } = build;\n  return {\n    typeDefs: gql`\n  \n      extend type Query {\n          # Individual record\n          randomCategoria: Categoria\n  \n          # List record\n          randomCategoriaList: [Categoria!]\n        }\n      `,\n    resolvers: {\n      Query: {\n        /*\n         * Individual record needs to return just one row but\n         * `selectGraphQLResultFromTable` always returns an array; so the\n         * resolver is responsible for turning the array into a single record.\n         */\n        randomCategoria: async (_query, args, context, resolveInfo) => {\n          // Remember: resolveInfo.graphile.selectGraphQLResultFromTable is where the PostGraphile\n          // look-ahead magic happens!\n          const rows = await resolveInfo.graphile.selectGraphQLResultFromTable(sql.fragment`public.categoria`, (tableAlias, queryBuilder) => {\n            queryBuilder.orderBy(sql.fragment`random()`);\n            queryBuilder.limit(1);\n          });\n          return rows[0];\n        },\n        /*\n         * Connection and list resolvers are identical; PostGraphile handles\n         * the complexities for you. We've simplified these down to a direct\n         * call to `selectGraphQLResultFromTable` but you may wish to wrap this\n         * with additional logic.\n         */\n        randomCategoriaList: (_query, args, context, resolveInfo) => resolveInfo.graphile.selectGraphQLResultFromTable(sql.fragment`public.categoria`, (tableAlias, queryBuilder) => {\n          queryBuilder.orderBy(sql.fragment`random()`);\n        })\n      }\n    }\n  };\n});\nmodule.exports = {\n  MySchemaCategoriasPlugins\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtYWtlRXh0ZW5kU2NoZW1hUGx1Z2luIiwiZ3FsIiwicmVxdWlyZSIsIk15U2NoZW1hQ2F0ZWdvcmlhc1BsdWdpbnMiLCJidWlsZCIsInBnU3FsIiwic3FsIiwidHlwZURlZnMiLCJyZXNvbHZlcnMiLCJRdWVyeSIsInJhbmRvbUNhdGVnb3JpYSIsIl9xdWVyeSIsImFyZ3MiLCJjb250ZXh0IiwicmVzb2x2ZUluZm8iLCJyb3dzIiwiZ3JhcGhpbGUiLCJzZWxlY3RHcmFwaFFMUmVzdWx0RnJvbVRhYmxlIiwiZnJhZ21lbnQiLCJ0YWJsZUFsaWFzIiwicXVlcnlCdWlsZGVyIiwib3JkZXJCeSIsImxpbWl0IiwicmFuZG9tQ2F0ZWdvcmlhTGlzdCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6Ii9ob21lL2FsZXgvRnVua29DZGVsVV9BcHAvMl9CYWNrZW5kL1NjaGVtYXMvQ2F0ZWdvcmlhcy8iLCJzb3VyY2VzIjpbIkNhdGVnb3JpYXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBtYWtlRXh0ZW5kU2NoZW1hUGx1Z2luLCBncWwgfSA9IHJlcXVpcmUoXCJncmFwaGlsZS11dGlsc1wiKTtcblxuXG5jb25zdCAgTXlTY2hlbWFDYXRlZ29yaWFzUGx1Z2lucyA9IG1ha2VFeHRlbmRTY2hlbWFQbHVnaW4oYnVpbGQgPT4ge1xuICAgIGNvbnN0IHsgcGdTcWw6IHNxbCB9ID0gYnVpbGQ7XG4gICAgcmV0dXJuIHtcbiAgICAgIHR5cGVEZWZzOiBncWxgXG4gIFxuICAgICAgZXh0ZW5kIHR5cGUgUXVlcnkge1xuICAgICAgICAgICMgSW5kaXZpZHVhbCByZWNvcmRcbiAgICAgICAgICByYW5kb21DYXRlZ29yaWE6IENhdGVnb3JpYVxuICBcbiAgICAgICAgICAjIExpc3QgcmVjb3JkXG4gICAgICAgICAgcmFuZG9tQ2F0ZWdvcmlhTGlzdDogW0NhdGVnb3JpYSFdXG4gICAgICAgIH1cbiAgICAgIGAsXG4gICAgICByZXNvbHZlcnM6IHtcbiAgICAgICAgUXVlcnk6IHtcbiAgICAgICAgICAvKlxuICAgICAgICAgICAqIEluZGl2aWR1YWwgcmVjb3JkIG5lZWRzIHRvIHJldHVybiBqdXN0IG9uZSByb3cgYnV0XG4gICAgICAgICAgICogYHNlbGVjdEdyYXBoUUxSZXN1bHRGcm9tVGFibGVgIGFsd2F5cyByZXR1cm5zIGFuIGFycmF5OyBzbyB0aGVcbiAgICAgICAgICAgKiByZXNvbHZlciBpcyByZXNwb25zaWJsZSBmb3IgdHVybmluZyB0aGUgYXJyYXkgaW50byBhIHNpbmdsZSByZWNvcmQuXG4gICAgICAgICAgICovXG4gICAgICAgICAgcmFuZG9tQ2F0ZWdvcmlhOiBhc3luYyAoX3F1ZXJ5LCBhcmdzLCBjb250ZXh0LCByZXNvbHZlSW5mbykgPT4ge1xuICAgICAgICAgICAgLy8gUmVtZW1iZXI6IHJlc29sdmVJbmZvLmdyYXBoaWxlLnNlbGVjdEdyYXBoUUxSZXN1bHRGcm9tVGFibGUgaXMgd2hlcmUgdGhlIFBvc3RHcmFwaGlsZVxuICAgICAgICAgICAgLy8gbG9vay1haGVhZCBtYWdpYyBoYXBwZW5zIVxuICAgICAgICAgICAgY29uc3Qgcm93cyA9IGF3YWl0IHJlc29sdmVJbmZvLmdyYXBoaWxlLnNlbGVjdEdyYXBoUUxSZXN1bHRGcm9tVGFibGUoXG4gICAgICAgICAgICAgIHNxbC5mcmFnbWVudGBwdWJsaWMuY2F0ZWdvcmlhYCxcbiAgICAgICAgICAgICAgKHRhYmxlQWxpYXMsIHF1ZXJ5QnVpbGRlcikgPT4ge1xuICAgICAgICAgICAgICAgIHF1ZXJ5QnVpbGRlci5vcmRlckJ5KHNxbC5mcmFnbWVudGByYW5kb20oKWApO1xuICAgICAgICAgICAgICAgIHF1ZXJ5QnVpbGRlci5saW1pdCgxKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIHJldHVybiByb3dzWzBdO1xuICAgICAgICAgIH0sXG4gIFxuICAgICAgICAgIC8qXG4gICAgICAgICAgICogQ29ubmVjdGlvbiBhbmQgbGlzdCByZXNvbHZlcnMgYXJlIGlkZW50aWNhbDsgUG9zdEdyYXBoaWxlIGhhbmRsZXNcbiAgICAgICAgICAgKiB0aGUgY29tcGxleGl0aWVzIGZvciB5b3UuIFdlJ3ZlIHNpbXBsaWZpZWQgdGhlc2UgZG93biB0byBhIGRpcmVjdFxuICAgICAgICAgICAqIGNhbGwgdG8gYHNlbGVjdEdyYXBoUUxSZXN1bHRGcm9tVGFibGVgIGJ1dCB5b3UgbWF5IHdpc2ggdG8gd3JhcCB0aGlzXG4gICAgICAgICAgICogd2l0aCBhZGRpdGlvbmFsIGxvZ2ljLlxuICAgICAgICAgICAqL1xuICAgICAgICAgIHJhbmRvbUNhdGVnb3JpYUxpc3Q6IChfcXVlcnksIGFyZ3MsIGNvbnRleHQsIHJlc29sdmVJbmZvKSA9PlxuICAgICAgICAgICAgcmVzb2x2ZUluZm8uZ3JhcGhpbGUuc2VsZWN0R3JhcGhRTFJlc3VsdEZyb21UYWJsZShcbiAgICAgICAgICAgICAgc3FsLmZyYWdtZW50YHB1YmxpYy5jYXRlZ29yaWFgLFxuICAgICAgICAgICAgICAodGFibGVBbGlhcywgcXVlcnlCdWlsZGVyKSA9PiB7XG4gICAgICAgICAgICAgICAgcXVlcnlCdWlsZGVyLm9yZGVyQnkoc3FsLmZyYWdtZW50YHJhbmRvbSgpYCk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICksXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgfTtcbiAgfSk7XG4gIFxuICBtb2R1bGUuZXhwb3J0cyA9IHtNeVNjaGVtYUNhdGVnb3JpYXNQbHVnaW5zfTsiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU07RUFBRUEsc0JBQXNCO0VBQUVDO0FBQUksQ0FBQyxHQUFHQyxPQUFPLENBQUMsZ0JBQWdCLENBQUM7QUFHakUsTUFBT0MseUJBQXlCLEdBQUdILHNCQUFzQixDQUFDSSxLQUFLLElBQUk7RUFDL0QsTUFBTTtJQUFFQyxLQUFLLEVBQUVDO0VBQUksQ0FBQyxHQUFHRixLQUFLO0VBQzVCLE9BQU87SUFDTEcsUUFBUSxFQUFFTixHQUFJO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0lBQ0RPLFNBQVMsRUFBRTtNQUNUQyxLQUFLLEVBQUU7UUFDTDtBQUNWO0FBQ0E7QUFDQTtBQUNBO1FBQ1VDLGVBQWUsRUFBRSxPQUFPQyxNQUFNLEVBQUVDLElBQUksRUFBRUMsT0FBTyxFQUFFQyxXQUFXLEtBQUs7VUFDN0Q7VUFDQTtVQUNBLE1BQU1DLElBQUksR0FBRyxNQUFNRCxXQUFXLENBQUNFLFFBQVEsQ0FBQ0MsNEJBQTRCLENBQ2xFWCxHQUFHLENBQUNZLFFBQVMsa0JBQWlCLEVBQzlCLENBQUNDLFVBQVUsRUFBRUMsWUFBWSxLQUFLO1lBQzVCQSxZQUFZLENBQUNDLE9BQU8sQ0FBQ2YsR0FBRyxDQUFDWSxRQUFTLFVBQVMsQ0FBQztZQUM1Q0UsWUFBWSxDQUFDRSxLQUFLLENBQUMsQ0FBQyxDQUFDO1VBQ3ZCLENBQUMsQ0FDRjtVQUNELE9BQU9QLElBQUksQ0FBQyxDQUFDLENBQUM7UUFDaEIsQ0FBQztRQUVEO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtRQUNVUSxtQkFBbUIsRUFBRSxDQUFDWixNQUFNLEVBQUVDLElBQUksRUFBRUMsT0FBTyxFQUFFQyxXQUFXLEtBQ3REQSxXQUFXLENBQUNFLFFBQVEsQ0FBQ0MsNEJBQTRCLENBQy9DWCxHQUFHLENBQUNZLFFBQVMsa0JBQWlCLEVBQzlCLENBQUNDLFVBQVUsRUFBRUMsWUFBWSxLQUFLO1VBQzVCQSxZQUFZLENBQUNDLE9BQU8sQ0FBQ2YsR0FBRyxDQUFDWSxRQUFTLFVBQVMsQ0FBQztRQUM5QyxDQUFDO01BRVA7SUFDRjtFQUNGLENBQUM7QUFDSCxDQUFDLENBQUM7QUFFRk0sTUFBTSxDQUFDQyxPQUFPLEdBQUc7RUFBQ3RCO0FBQXlCLENBQUMifQ==","map":{"version":3,"names":["makeExtendSchemaPlugin","gql","require","MySchemaCategoriasPlugins","build","pgSql","sql","typeDefs","resolvers","Query","randomCategoria","_query","args","context","resolveInfo","rows","graphile","selectGraphQLResultFromTable","fragment","tableAlias","queryBuilder","orderBy","limit","randomCategoriaList","module","exports"],"sourceRoot":"/home/alex/FunkoCdelU_App/2_Backend/Schemas/Categorias/","sources":["Categorias.js"],"sourcesContent":["const { makeExtendSchemaPlugin, gql } = require(\"graphile-utils\");\n\n\nconst  MySchemaCategoriasPlugins = makeExtendSchemaPlugin(build => {\n    const { pgSql: sql } = build;\n    return {\n      typeDefs: gql`\n  \n      extend type Query {\n          # Individual record\n          randomCategoria: Categoria\n  \n          # List record\n          randomCategoriaList: [Categoria!]\n        }\n      `,\n      resolvers: {\n        Query: {\n          /*\n           * Individual record needs to return just one row but\n           * `selectGraphQLResultFromTable` always returns an array; so the\n           * resolver is responsible for turning the array into a single record.\n           */\n          randomCategoria: async (_query, args, context, resolveInfo) => {\n            // Remember: resolveInfo.graphile.selectGraphQLResultFromTable is where the PostGraphile\n            // look-ahead magic happens!\n            const rows = await resolveInfo.graphile.selectGraphQLResultFromTable(\n              sql.fragment`public.categoria`,\n              (tableAlias, queryBuilder) => {\n                queryBuilder.orderBy(sql.fragment`random()`);\n                queryBuilder.limit(1);\n              }\n            );\n            return rows[0];\n          },\n  \n          /*\n           * Connection and list resolvers are identical; PostGraphile handles\n           * the complexities for you. We've simplified these down to a direct\n           * call to `selectGraphQLResultFromTable` but you may wish to wrap this\n           * with additional logic.\n           */\n          randomCategoriaList: (_query, args, context, resolveInfo) =>\n            resolveInfo.graphile.selectGraphQLResultFromTable(\n              sql.fragment`public.categoria`,\n              (tableAlias, queryBuilder) => {\n                queryBuilder.orderBy(sql.fragment`random()`);\n              }\n            ),\n        }\n      },\n    };\n  });\n  \n  module.exports = {MySchemaCategoriasPlugins};"],"mappings":"AAAA,MAAM;EAAEA,sBAAsB;EAAEC;AAAI,CAAC,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAGjE,MAAOC,yBAAyB,GAAGH,sBAAsB,CAACI,KAAK,IAAI;EAC/D,MAAM;IAAEC,KAAK,EAAEC;EAAI,CAAC,GAAGF,KAAK;EAC5B,OAAO;IACLG,QAAQ,EAAEN,GAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;IACDO,SAAS,EAAE;MACTC,KAAK,EAAE;QACL;AACV;AACA;AACA;AACA;QACUC,eAAe,EAAE,OAAOC,MAAM,EAAEC,IAAI,EAAEC,OAAO,EAAEC,WAAW,KAAK;UAC7D;UACA;UACA,MAAMC,IAAI,GAAG,MAAMD,WAAW,CAACE,QAAQ,CAACC,4BAA4B,CAClEX,GAAG,CAACY,QAAS,kBAAiB,EAC9B,CAACC,UAAU,EAAEC,YAAY,KAAK;YAC5BA,YAAY,CAACC,OAAO,CAACf,GAAG,CAACY,QAAS,UAAS,CAAC;YAC5CE,YAAY,CAACE,KAAK,CAAC,CAAC,CAAC;UACvB,CAAC,CACF;UACD,OAAOP,IAAI,CAAC,CAAC,CAAC;QAChB,CAAC;QAED;AACV;AACA;AACA;AACA;AACA;QACUQ,mBAAmB,EAAE,CAACZ,MAAM,EAAEC,IAAI,EAAEC,OAAO,EAAEC,WAAW,KACtDA,WAAW,CAACE,QAAQ,CAACC,4BAA4B,CAC/CX,GAAG,CAACY,QAAS,kBAAiB,EAC9B,CAACC,UAAU,EAAEC,YAAY,KAAK;UAC5BA,YAAY,CAACC,OAAO,CAACf,GAAG,CAACY,QAAS,UAAS,CAAC;QAC9C,CAAC;MAEP;IACF;EACF,CAAC;AACH,CAAC,CAAC;AAEFM,MAAM,CAACC,OAAO,GAAG;EAACtB;AAAyB,CAAC"}},"mtime":1665494206423},"{\"assumptions\":{},\"sourceRoot\":\"/home/alex/FunkoCdelU_App/2_Backend/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/alex/FunkoCdelU_App/2_Backend\",\"filename\":\"/home/alex/FunkoCdelU_App/2_Backend/src/BBDD_Function.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/alex/FunkoCdelU_App/2_Backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.19.3:development":{"value":{"code":"async function ConfirmaCarrito(dni) {\n  const response = await fetch(\"http://localhost:5000/graphql\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      query: `mutation {\n                confirmarComprarDelCarrito(input: {dniUser: ${dni}}) {\n                  clientMutationId\n                }\n              }\n              \n              `\n    })\n  });\n  const respuesta = await response.json();\n  console.log(respuesta);\n}\nasync function ConfirmaVenta(dni, mercadopago_id) {\n  const response = await fetch(\"http://localhost:5000/graphql\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      query: `mutation {\n          confirmarEstadoDeVenta(input: {dni: ${dni}, mercadopagoId: \"${mercadopago_id}\"}) {\n            clientMutationId\n          }\n        }\n        \n              `\n    })\n  });\n  const respuesta = await response.json();\n  console.log(respuesta);\n}\nasync function getDataUser(email) {\n  const response = await fetch(\"http://localhost:5000/graphql\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      query: `query MyQuery {\n                usuarioByEmail(email: \"${email}\") {\n                  dni\n                }\n              }\n              \n              `\n    })\n  });\n  const respuesta = await response.json();\n  return respuesta.data.usuarioByEmail;\n}\nasync function getMercadoPagoId() {\n  const response = await fetch(\"http://localhost:5000/graphql\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      query: `query MyQuery {\n                      allVentausuarios {\n                      nodes {\n                      mercadopagoId\n            }\n          }\n        }\n        \n              \n              `\n    })\n  });\n  const respuesta = await response.json();\n  return respuesta.data.allVentausuarios.nodes;\n}\nmodule.exports = {\n  ConfirmaCarrito,\n  ConfirmaVenta,\n  getDataUser,\n  getMercadoPagoId\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJDb25maXJtYUNhcnJpdG8iLCJkbmkiLCJyZXNwb25zZSIsImZldGNoIiwibWV0aG9kIiwiaGVhZGVycyIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwicXVlcnkiLCJyZXNwdWVzdGEiLCJqc29uIiwiY29uc29sZSIsImxvZyIsIkNvbmZpcm1hVmVudGEiLCJtZXJjYWRvcGFnb19pZCIsImdldERhdGFVc2VyIiwiZW1haWwiLCJkYXRhIiwidXN1YXJpb0J5RW1haWwiLCJnZXRNZXJjYWRvUGFnb0lkIiwiYWxsVmVudGF1c3VhcmlvcyIsIm5vZGVzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiL2hvbWUvYWxleC9GdW5rb0NkZWxVX0FwcC8yX0JhY2tlbmQvc3JjLyIsInNvdXJjZXMiOlsiQkJERF9GdW5jdGlvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJhc3luYyBmdW5jdGlvbiBDb25maXJtYUNhcnJpdG8oZG5pKSB7XG4gIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goXCJodHRwOi8vbG9jYWxob3N0OjUwMDAvZ3JhcGhxbFwiLCB7XG4gICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICBoZWFkZXJzOiB7XG4gICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICB9LFxuICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgIHF1ZXJ5OiBgbXV0YXRpb24ge1xuICAgICAgICAgICAgICAgIGNvbmZpcm1hckNvbXByYXJEZWxDYXJyaXRvKGlucHV0OiB7ZG5pVXNlcjogJHtkbml9fSkge1xuICAgICAgICAgICAgICAgICAgY2xpZW50TXV0YXRpb25JZFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgYCxcbiAgICB9KSxcbiAgfSk7XG5cbiAgY29uc3QgcmVzcHVlc3RhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICBjb25zb2xlLmxvZyhyZXNwdWVzdGEpO1xufVxuXG5hc3luYyBmdW5jdGlvbiBDb25maXJtYVZlbnRhKGRuaSwgbWVyY2Fkb3BhZ29faWQpIHtcbiAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChcImh0dHA6Ly9sb2NhbGhvc3Q6NTAwMC9ncmFwaHFsXCIsIHtcbiAgICBtZXRob2Q6IFwiUE9TVFwiLFxuICAgIGhlYWRlcnM6IHtcbiAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgIH0sXG4gICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgcXVlcnk6IGBtdXRhdGlvbiB7XG4gICAgICAgICAgY29uZmlybWFyRXN0YWRvRGVWZW50YShpbnB1dDoge2RuaTogJHtkbml9LCBtZXJjYWRvcGFnb0lkOiBcIiR7bWVyY2Fkb3BhZ29faWR9XCJ9KSB7XG4gICAgICAgICAgICBjbGllbnRNdXRhdGlvbklkXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAgICAgICBgLFxuICAgIH0pLFxuICB9KTtcblxuICBjb25zdCByZXNwdWVzdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gIGNvbnNvbGUubG9nKHJlc3B1ZXN0YSk7XG59XG5cbmFzeW5jIGZ1bmN0aW9uIGdldERhdGFVc2VyKGVtYWlsKSB7XG4gIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goXCJodHRwOi8vbG9jYWxob3N0OjUwMDAvZ3JhcGhxbFwiLCB7XG4gICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICBoZWFkZXJzOiB7XG4gICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICB9LFxuICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgIHF1ZXJ5OiBgcXVlcnkgTXlRdWVyeSB7XG4gICAgICAgICAgICAgICAgdXN1YXJpb0J5RW1haWwoZW1haWw6IFwiJHtlbWFpbH1cIikge1xuICAgICAgICAgICAgICAgICAgZG5pXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIFxuICAgICAgICAgICAgICBgLFxuICAgIH0pLFxuICB9KTtcblxuICBjb25zdCByZXNwdWVzdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gIHJldHVybiByZXNwdWVzdGEuZGF0YS51c3VhcmlvQnlFbWFpbDtcbn1cblxuYXN5bmMgZnVuY3Rpb24gZ2V0TWVyY2Fkb1BhZ29JZCgpIHtcbiAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChcImh0dHA6Ly9sb2NhbGhvc3Q6NTAwMC9ncmFwaHFsXCIsIHtcbiAgICBtZXRob2Q6IFwiUE9TVFwiLFxuICAgIGhlYWRlcnM6IHtcbiAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgIH0sXG4gICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgcXVlcnk6IGBxdWVyeSBNeVF1ZXJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICBhbGxWZW50YXVzdWFyaW9zIHtcbiAgICAgICAgICAgICAgICAgICAgICBub2RlcyB7XG4gICAgICAgICAgICAgICAgICAgICAgbWVyY2Fkb3BhZ29JZFxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgIGAsXG4gICAgfSksXG4gIH0pO1xuXG4gIGNvbnN0IHJlc3B1ZXN0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgcmV0dXJuIHJlc3B1ZXN0YS5kYXRhLmFsbFZlbnRhdXN1YXJpb3Mubm9kZXM7XG59XG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBDb25maXJtYUNhcnJpdG8sXG4gICAgQ29uZmlybWFWZW50YSxcbiAgICBnZXREYXRhVXNlcixcbiAgICBnZXRNZXJjYWRvUGFnb0lkXG4gIH07Il0sIm1hcHBpbmdzIjoiQUFBQSxlQUFlQSxlQUFlLENBQUNDLEdBQUcsRUFBRTtFQUNsQyxNQUFNQyxRQUFRLEdBQUcsTUFBTUMsS0FBSyxDQUFDLCtCQUErQixFQUFFO0lBQzVEQyxNQUFNLEVBQUUsTUFBTTtJQUNkQyxPQUFPLEVBQUU7TUFDUCxjQUFjLEVBQUU7SUFDbEIsQ0FBQztJQUNEQyxJQUFJLEVBQUVDLElBQUksQ0FBQ0MsU0FBUyxDQUFDO01BQ25CQyxLQUFLLEVBQUc7QUFDZCw4REFBOERSLEdBQUk7QUFDbEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtJQUNJLENBQUM7RUFDSCxDQUFDLENBQUM7RUFFRixNQUFNUyxTQUFTLEdBQUcsTUFBTVIsUUFBUSxDQUFDUyxJQUFJLEVBQUU7RUFDdkNDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDSCxTQUFTLENBQUM7QUFDeEI7QUFFQSxlQUFlSSxhQUFhLENBQUNiLEdBQUcsRUFBRWMsY0FBYyxFQUFFO0VBQ2hELE1BQU1iLFFBQVEsR0FBRyxNQUFNQyxLQUFLLENBQUMsK0JBQStCLEVBQUU7SUFDNURDLE1BQU0sRUFBRSxNQUFNO0lBQ2RDLE9BQU8sRUFBRTtNQUNQLGNBQWMsRUFBRTtJQUNsQixDQUFDO0lBQ0RDLElBQUksRUFBRUMsSUFBSSxDQUFDQyxTQUFTLENBQUM7TUFDbkJDLEtBQUssRUFBRztBQUNkLGdEQUFnRFIsR0FBSSxxQkFBb0JjLGNBQWU7QUFDdkY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtJQUNJLENBQUM7RUFDSCxDQUFDLENBQUM7RUFFRixNQUFNTCxTQUFTLEdBQUcsTUFBTVIsUUFBUSxDQUFDUyxJQUFJLEVBQUU7RUFDdkNDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDSCxTQUFTLENBQUM7QUFDeEI7QUFFQSxlQUFlTSxXQUFXLENBQUNDLEtBQUssRUFBRTtFQUNoQyxNQUFNZixRQUFRLEdBQUcsTUFBTUMsS0FBSyxDQUFDLCtCQUErQixFQUFFO0lBQzVEQyxNQUFNLEVBQUUsTUFBTTtJQUNkQyxPQUFPLEVBQUU7TUFDUCxjQUFjLEVBQUU7SUFDbEIsQ0FBQztJQUNEQyxJQUFJLEVBQUVDLElBQUksQ0FBQ0MsU0FBUyxDQUFDO01BQ25CQyxLQUFLLEVBQUc7QUFDZCx5Q0FBeUNRLEtBQU07QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtJQUNJLENBQUM7RUFDSCxDQUFDLENBQUM7RUFFRixNQUFNUCxTQUFTLEdBQUcsTUFBTVIsUUFBUSxDQUFDUyxJQUFJLEVBQUU7RUFDdkMsT0FBT0QsU0FBUyxDQUFDUSxJQUFJLENBQUNDLGNBQWM7QUFDdEM7QUFFQSxlQUFlQyxnQkFBZ0IsR0FBRztFQUNoQyxNQUFNbEIsUUFBUSxHQUFHLE1BQU1DLEtBQUssQ0FBQywrQkFBK0IsRUFBRTtJQUM1REMsTUFBTSxFQUFFLE1BQU07SUFDZEMsT0FBTyxFQUFFO01BQ1AsY0FBYyxFQUFFO0lBQ2xCLENBQUM7SUFDREMsSUFBSSxFQUFFQyxJQUFJLENBQUNDLFNBQVMsQ0FBQztNQUNuQkMsS0FBSyxFQUFHO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0lBQ0ksQ0FBQztFQUNILENBQUMsQ0FBQztFQUVGLE1BQU1DLFNBQVMsR0FBRyxNQUFNUixRQUFRLENBQUNTLElBQUksRUFBRTtFQUN2QyxPQUFPRCxTQUFTLENBQUNRLElBQUksQ0FBQ0csZ0JBQWdCLENBQUNDLEtBQUs7QUFDOUM7QUFDQUMsTUFBTSxDQUFDQyxPQUFPLEdBQUc7RUFDYnhCLGVBQWU7RUFDZmMsYUFBYTtFQUNiRSxXQUFXO0VBQ1hJO0FBQ0YsQ0FBQyJ9","map":{"version":3,"names":["ConfirmaCarrito","dni","response","fetch","method","headers","body","JSON","stringify","query","respuesta","json","console","log","ConfirmaVenta","mercadopago_id","getDataUser","email","data","usuarioByEmail","getMercadoPagoId","allVentausuarios","nodes","module","exports"],"sourceRoot":"/home/alex/FunkoCdelU_App/2_Backend/src/","sources":["BBDD_Function.js"],"sourcesContent":["async function ConfirmaCarrito(dni) {\n  const response = await fetch(\"http://localhost:5000/graphql\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      query: `mutation {\n                confirmarComprarDelCarrito(input: {dniUser: ${dni}}) {\n                  clientMutationId\n                }\n              }\n              \n              `,\n    }),\n  });\n\n  const respuesta = await response.json();\n  console.log(respuesta);\n}\n\nasync function ConfirmaVenta(dni, mercadopago_id) {\n  const response = await fetch(\"http://localhost:5000/graphql\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      query: `mutation {\n          confirmarEstadoDeVenta(input: {dni: ${dni}, mercadopagoId: \"${mercadopago_id}\"}) {\n            clientMutationId\n          }\n        }\n        \n              `,\n    }),\n  });\n\n  const respuesta = await response.json();\n  console.log(respuesta);\n}\n\nasync function getDataUser(email) {\n  const response = await fetch(\"http://localhost:5000/graphql\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      query: `query MyQuery {\n                usuarioByEmail(email: \"${email}\") {\n                  dni\n                }\n              }\n              \n              `,\n    }),\n  });\n\n  const respuesta = await response.json();\n  return respuesta.data.usuarioByEmail;\n}\n\nasync function getMercadoPagoId() {\n  const response = await fetch(\"http://localhost:5000/graphql\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      query: `query MyQuery {\n                      allVentausuarios {\n                      nodes {\n                      mercadopagoId\n            }\n          }\n        }\n        \n              \n              `,\n    }),\n  });\n\n  const respuesta = await response.json();\n  return respuesta.data.allVentausuarios.nodes;\n}\nmodule.exports = {\n    ConfirmaCarrito,\n    ConfirmaVenta,\n    getDataUser,\n    getMercadoPagoId\n  };"],"mappings":"AAAA,eAAeA,eAAe,CAACC,GAAG,EAAE;EAClC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;IAC5DC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBC,KAAK,EAAG;AACd,8DAA8DR,GAAI;AAClE;AACA;AACA;AACA;AACA;IACI,CAAC;EACH,CAAC,CAAC;EAEF,MAAMS,SAAS,GAAG,MAAMR,QAAQ,CAACS,IAAI,EAAE;EACvCC,OAAO,CAACC,GAAG,CAACH,SAAS,CAAC;AACxB;AAEA,eAAeI,aAAa,CAACb,GAAG,EAAEc,cAAc,EAAE;EAChD,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;IAC5DC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBC,KAAK,EAAG;AACd,gDAAgDR,GAAI,qBAAoBc,cAAe;AACvF;AACA;AACA;AACA;AACA;IACI,CAAC;EACH,CAAC,CAAC;EAEF,MAAML,SAAS,GAAG,MAAMR,QAAQ,CAACS,IAAI,EAAE;EACvCC,OAAO,CAACC,GAAG,CAACH,SAAS,CAAC;AACxB;AAEA,eAAeM,WAAW,CAACC,KAAK,EAAE;EAChC,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;IAC5DC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBC,KAAK,EAAG;AACd,yCAAyCQ,KAAM;AAC/C;AACA;AACA;AACA;AACA;IACI,CAAC;EACH,CAAC,CAAC;EAEF,MAAMP,SAAS,GAAG,MAAMR,QAAQ,CAACS,IAAI,EAAE;EACvC,OAAOD,SAAS,CAACQ,IAAI,CAACC,cAAc;AACtC;AAEA,eAAeC,gBAAgB,GAAG;EAChC,MAAMlB,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;IAC5DC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBC,KAAK,EAAG;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI,CAAC;EACH,CAAC,CAAC;EAEF,MAAMC,SAAS,GAAG,MAAMR,QAAQ,CAACS,IAAI,EAAE;EACvC,OAAOD,SAAS,CAACQ,IAAI,CAACG,gBAAgB,CAACC,KAAK;AAC9C;AACAC,MAAM,CAACC,OAAO,GAAG;EACbxB,eAAe;EACfc,aAAa;EACbE,WAAW;EACXI;AACF,CAAC"}},"mtime":1680562312838}}